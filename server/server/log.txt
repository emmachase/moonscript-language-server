Starting Language Server
Waiting for packet
hellllooo
Saw line Content-Length: 5765
Saw line 
Got empty line, breaking
5765
table: 00F97CE0
Waiting for packet
hellllooo
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1170004,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179092,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179092,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179092,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179092,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179092,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1177036,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1177036,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1177036,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1177036,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1177036,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1091624,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = 'Method Not Found' 
  } 
}
'Sending response'
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1178992,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  error = { 
    code = -32601,
    message = "Method 'nil' Not Found" 
  } 
}
'Sending response'
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1179024,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'got request:'{ 
  initialized = false 
}
{ 
  error = { 
    code = -32601,
    message = "Method 'nil' Not Found" 
  } 
}
'Sending response'
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1180332,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1180332,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1180332,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1180332,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1180332,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1182340,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  capabilities = { 
    textDocumentSync = 1 
  },
  id = 0,
  serverInfo = { 
    name = 'Moonscript Language Server' 
  } 
}
'Sending response'
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1178072,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
{ 
  id = 0,
  result = { 
    capabilities = { 
      textDocumentSync = 1 
    },
    serverInfo = { 
      name = 'Moonscript Language Server' 
    } 
  } 
}
'Sending response'
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1182400,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'
{ 
  id = 0,
  result = { 
    capabilities = { 
      textDocumentSync = 1 
    },
    serverInfo = { 
      name = 'Moonscript Language Server' 
    } 
  } 
}
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1116044,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\r\n\r\n{"id":0,"result":{"serverInfo":{"name":"Moonscript Language Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1183472,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\r\n\r\n{"id":0,"result":{"serverInfo":{"name":"Moonscript 
Language Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1184604,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\r\n\r\n{"id":0,"result":{"serverInfo":{"name":"Moonscript 
Language Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1184924,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\n\n{"id":0,"result":{"serverInfo":{"name":"Moonscript Lang
uage Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1175396,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\r\n\r\n{"id":0,"result":{"serverInfo":{"name":"Moonscript 
Language Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line Content-Length: 5765'
'Saw line '
'Got empty line, breaking'
'5765'
{ 
  id = 0,
  jsonrpc = '2.0',
  method = 'initialize',
  params = { 
    capabilities = { 
      general = { 
        markdown = { 
          parser = 'marked',
          version = '1.1.0' 
        },
        positionEncodings = { 'utf-16' },
        regularExpressions = { 
          engine = 'ECMAScript',
          version = 'ES2020' 
        },
        staleRequestSupport = { 
          cancel = true,
          retryOnContentModified = { 'textDocument/semanticTokens/full', 
            'textDocument/semanticTokens/range', 'textDocument/semanticTokens/full/delta' } 
        } 
      },
      notebookDocument = { 
        synchronization = { 
          dynamicRegistration = true,
          executionSummarySupport = true 
        } 
      },
      textDocument = { 
        callHierarchy = { 
          dynamicRegistration = true 
        },
        codeAction = { 
          codeActionLiteralSupport = { 
            codeActionKind = { 
              valueSet = { '', 'quickfix', 'refactor', 'refactor.extract', 'refactor.inline', 
                'refactor.rewrite', 'source', 'source.organizeImports' } 
            } 
          },
          dataSupport = true,
          disabledSupport = true,
          dynamicRegistration = true,
          honorsChangeAnnotations = false,
          isPreferredSupport = true,
          resolveSupport = { 
            properties = { 'edit' } 
          } 
        },
        codeLens = { 
          dynamicRegistration = true 
        },
        colorProvider = { 
          dynamicRegistration = true 
        },
        completion = { 
          completionItem = { 
            commitCharactersSupport = true,
            deprecatedSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            insertReplaceSupport = true,
            insertTextModeSupport = { 
              valueSet = { 1, 2 } 
            },
            labelDetailsSupport = true,
            preselectSupport = true,
            resolveSupport = { 
              properties = { 'documentation', 'detail', 'additionalTextEdits' } 
            },
            snippetSupport = true,
            tagSupport = { 
              valueSet = { 1 } 
            } 
          },
          completionItemKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25 } 
          },
          completionList = { 
            itemDefaults = { 'commitCharacters', 'editRange', 'insertTextFormat', 
              'insertTextMode' } 
          },
          contextSupport = true,
          dynamicRegistration = true,
          insertTextMode = 2 
        },
        declaration = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        definition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        diagnostic = { 
          dynamicRegistration = true,
          relatedDocumentSupport = false 
        },
        documentHighlight = { 
          dynamicRegistration = true 
        },
        documentLink = { 
          dynamicRegistration = true,
          tooltipSupport = true 
        },
        documentSymbol = { 
          dynamicRegistration = true,
          hierarchicalDocumentSymbolSupport = true,
          labelSupport = true,
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        foldingRange = { 
          dynamicRegistration = true,
          foldingRange = { 
            collapsedText = false 
          },
          foldingRangeKind = { 
            valueSet = { 'comment', 'imports', 'region' } 
          },
          lineFoldingOnly = true,
          rangeLimit = 5000 
        },
        formatting = { 
          dynamicRegistration = true 
        },
        hover = { 
          contentFormat = { 'markdown', 'plaintext' },
          dynamicRegistration = true 
        },
        implementation = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        inlayHint = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'tooltip', 'textEdits', 'label.tooltip', 'label.location', 
              'label.command' } 
          } 
        },
        inlineValue = { 
          dynamicRegistration = true 
        },
        linkedEditingRange = { 
          dynamicRegistration = true 
        },
        onTypeFormatting = { 
          dynamicRegistration = true 
        },
        publishDiagnostics = { 
          codeDescriptionSupport = true,
          dataSupport = true,
          relatedInformation = true,
          tagSupport = { 
            valueSet = { 1, 2 } 
          },
          versionSupport = false 
        },
        rangeFormatting = { 
          dynamicRegistration = true 
        },
        references = { 
          dynamicRegistration = true 
        },
        rename = { 
          dynamicRegistration = true,
          honorsChangeAnnotations = true,
          prepareSupport = true,
          prepareSupportDefaultBehavior = 1 
        },
        selectionRange = { 
          dynamicRegistration = true 
        },
        semanticTokens = { 
          augmentsSyntaxTokens = true,
          dynamicRegistration = true,
          formats = { 'relative' },
          multilineTokenSupport = false,
          overlappingTokenSupport = false,
          requests = { 
            full = { 
              delta = true 
            },
            range = true 
          },
          serverCancelSupport = true,
          tokenModifiers = { 'declaration', 'definition', 'readonly', 'static', 
            'deprecated', 'abstract', 'async', 'modification', 'documentation', 
            'defaultLibrary' },
          tokenTypes = { 'namespace', 'type', 'class', 'enum', 'interface', 'struct', 
            'typeParameter', 'parameter', 'variable', 'property', 'enumMember', 'event', 
            'function', 'method', 'macro', 'keyword', 'modifier', 'comment', 'string', 
            'number', 'regexp', 'operator', 'decorator' } 
        },
        signatureHelp = { 
          contextSupport = true,
          dynamicRegistration = true,
          signatureInformation = { 
            activeParameterSupport = true,
            documentationFormat = { 'markdown', 'plaintext' },
            parameterInformation = { 
              labelOffsetSupport = true 
            } 
          } 
        },
        synchronization = { 
          didSave = true,
          dynamicRegistration = true,
          willSave = true,
          willSaveWaitUntil = true 
        },
        typeDefinition = { 
          dynamicRegistration = true,
          linkSupport = true 
        },
        typeHierarchy = { 
          dynamicRegistration = true 
        } 
      },
      window = { 
        showDocument = { 
          support = true 
        },
        showMessage = { 
          messageActionItem = { 
            additionalPropertiesSupport = true 
          } 
        },
        workDoneProgress = true 
      },
      workspace = { 
        applyEdit = true,
        codeLens = { 
          refreshSupport = true 
        },
        configuration = true,
        diagnostics = { 
          refreshSupport = true 
        },
        didChangeConfiguration = { 
          dynamicRegistration = true 
        },
        didChangeWatchedFiles = { 
          dynamicRegistration = true,
          relativePatternSupport = true 
        },
        executeCommand = { 
          dynamicRegistration = true 
        },
        fileOperations = { 
          didCreate = true,
          didDelete = true,
          didRename = true,
          dynamicRegistration = true,
          willCreate = true,
          willDelete = true,
          willRename = true 
        },
        inlayHint = { 
          refreshSupport = true 
        },
        inlineValue = { 
          refreshSupport = true 
        },
        semanticTokens = { 
          refreshSupport = true 
        },
        symbol = { 
          dynamicRegistration = true,
          resolveSupport = { 
            properties = { 'location.range' } 
          },
          symbolKind = { 
            valueSet = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 
              20, 21, 22, 23, 24, 25, 26 } 
          },
          tagSupport = { 
            valueSet = { 1 } 
          } 
        },
        workspaceEdit = { 
          changeAnnotationSupport = { 
            groupsOnLabel = true 
          },
          documentChanges = true,
          failureHandling = 'textOnlyTransactional',
          normalizesLineEndings = true,
          resourceOperations = { 'create', 'rename', 'delete' } 
        },
        workspaceFolders = true 
      } 
    },
    clientInfo = { 
      name = 'Visual Studio Code',
      version = '1.74.2' 
    },
    locale = 'en-us',
    processId = 1187552,
    rootPath = 'c:\\Users\\me',
    rootUri = 'file:///c%3A/Users/me',
    trace = 'verbose',
    workspaceFolders = { { 
        name = 'me',
        uri = 'file:///c%3A/Users/me' 
      } } 
  } 
}
'Sending response'

[[Content-Length: 124\r\n\r\n{"id":0,"result":{"serverInfo":{"name":"Moonscript Language Server"},"capabilities":{"textDocumentSync":1}},"jsonrpc":"2.0"}]]
'Waiting for packet'
'hellllooo'
'Starting Language Server'
'Waiting for packet'
'hellllooo'
'Saw line nil''Starting Language Server'
